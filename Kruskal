//Timing:  3:33
9
1 8 9
1 2 4
2 8 11
8 9 7
8 7 1
9 7 6
2 3 9
9 3 2
3 6 4
7 6 2
3 4 7
4 6 15
4 5 10
6 5 11

#include <bits/stdc++.h>
#define MAX 10000
using namespace std;
struct cmp{
    operator()(pair<pair<int,int>, int> a, pair<pair<int,int>, int> b){
        return a.second > b.second;
    }
};
vector< pair<pair<int,int>, int> > lista;
int uf[MAX];
int res=0, n;

int Find(int a){
    if(uf[a] == a)
        return a;
    return uf[a] = Find(uf[a]);
}

void Union(int a,int b){
    uf[Find(a)]=Find(b);
}

bool sc(int a, int b){
    return Find(a) == Find(b);
}

void init(){
    for(int i=1;i<=n;i++){
        uf[i]=i;
    }
}

int main(){
    ifstream fin("in.txt");
    fin >> n;
    init();

    int a,b,c;

    while(fin >> a >> b >> c)
        lista.push_back(make_pair(make_pair(a,b), c));


    sort(lista.rbegin(),lista.rend(),cmp());

    for(int i=0;i<lista.size();i++){
        if(!sc(lista[i].first.first, lista[i].first.second)){
            Union(lista[i].first.first,lista[i].first.second);
            res+= lista[i].second;
        }
    }

    cout << res << endl;
}
